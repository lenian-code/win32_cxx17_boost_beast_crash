###########################################
##	Project settings
###########################################
cmake_minimum_required(VERSION 3.16)

set(PROJECT_NAME "c1001_with_beast")

project(${PROJECT_NAME})

###########################################
##	CONAN settings
###########################################

if(NOT EXISTS "${CMAKE_BINARY_DIR}/conan.cmake")
	message(STATUS "Downloading conan.cmake from https://github.com/conan-io/cmake-conan")
	file(DOWNLOAD "https://raw.githubusercontent.com/conan-io/cmake-conan/master/conan.cmake" "${CMAKE_BINARY_DIR}/conan.cmake")
endif()

if(EXISTS "${CMAKE_BINARY_DIR}/conan.cmake")
	include(${CMAKE_BINARY_DIR}/conan.cmake)
	conan_add_remote(NAME bincrafters URL https://api.bintray.com/conan/bincrafters/public-conan)
	conan_cmake_run(CONANFILE conanfile.txt BUILD missing )
endif()

set(CONAN_BUILD_INFO "CONAN_BUILD_INFO-NOTFOUND")
find_file(CONAN_BUILD_INFO conanbuildinfo_multi.cmake NO_DEFAULT_PATH PATHS ${CMAKE_BINARY_DIR})

if(${CONAN_BUILD_INFO} STREQUAL "CONAN_BUILD_INFO-NOTFOUND")
	find_file(CONAN_BUILD_INFO conanbuildinfo.cmake NO_DEFAULT_PATH PATHS ${CMAKE_BINARY_DIR})
	if(NOT ${CONAN_BUILD_INFO} STREQUAL "CONAN_BUILD_INFO-NOTFOUND")
		set(USE_NOT_MULTI_CONAN_BUILD_INFO TRUE)

	endif()
endif()
include(${CONAN_BUILD_INFO})


if(USE_NOT_MULTI_CONAN_BUILD_INFO)
	conan_basic_setup(TARGETS NO_OUTPUT_DIRS)
message(STATUS "wTARGETS NO_OUTPUT_DIRS")
else()
	conan_basic_setup(TARGETS)
message(STATUS "TARGETS")
endif()

###########################################
##	PROJECT
###########################################

set_property(GLOBAL PROPERTY USE_FOLDERS ON)


add_executable(${PROJECT_NAME} src/main.cpp )

target_include_directories(${PROJECT_NAME} PUBLIC ${CONAN_INCLUDE_DIRS})
target_link_libraries(${PROJECT_NAME} CONAN_PKG::boost )
target_compile_features(${PROJECT_NAME} PUBLIC cxx_std_17)